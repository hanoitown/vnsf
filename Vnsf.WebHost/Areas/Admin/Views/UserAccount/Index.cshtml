@model IEnumerable<Vnsf.Data.Entities.Account.UserAccount>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Username)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Created)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastUpdated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PasswordChanged)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequiresPasswordReset)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobileCodeSent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.MobilePhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsAccountVerified)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsLoginAllowed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsAccountClosed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AccountClosed)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastLogin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastFailedLogin)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FailedLoginCount)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VerificationKey)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VerificationKeySent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HashedPassword)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsVerificationKeyStale)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequiresTwoFactorAuthToSignIn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequiresTwoFactorCertificateToSignIn)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.RequiresTwoFactorAuthCodeToSignIn)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Username)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Created)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastUpdated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PasswordChanged)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RequiresPasswordReset)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobileCodeSent)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobilePhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsAccountVerified)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsLoginAllowed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsAccountClosed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AccountClosed)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastLogin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastFailedLogin)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FailedLoginCount)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VerificationKey)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VerificationKeySent)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HashedPassword)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsVerificationKeyStale)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RequiresTwoFactorAuthToSignIn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RequiresTwoFactorCertificateToSignIn)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RequiresTwoFactorAuthCodeToSignIn)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>
